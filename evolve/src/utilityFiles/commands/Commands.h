#ifndef COMMANDS_STU_H
#define COMMANDS_STU_H
#include <string>
using namespace std;

/**
* Singleton class that contains command constants (and maybe one or two others *duck*), auto-generated by commandGenerator.py from Commands.xml
* Eventually, a hierarchy of contants may be created (but the work is not really justifiable at this point
* The command contants are the commands used for the various clients & servers to communicate
*/
class Commands
{
public:
    static Commands* getInstance();
    string createCommand;
    string initCommand;
    string startCommand;
    string stopCommand;
    string printCommand;
    string destroyCommand;
    string makeCopyCommand;
    string getSystemCommand;
    string getMaxCommand;
    string getMinCommand;
    string getIdsCommand;
    string getModeCommand;
    string getSystemLengthCommand;
    string getProductionRulesCommand;
    string getOptionsCommand;
    string getMutationProbabilityCommand;
    string setMaxCommand;
    string setMinCommand;
    string setSystemCommand;
    string setModeCommand;
    string setProductionCommand;
    string deleteProductionCommand;
    string setMutationProbabilitiesCommand;
    string setMutationProbabilityCommand;
    string setOptionsCommand;
    string deleteOptionCommand;
    string loadCommand;
    string saveCommand;
    string runCommand;
    string getMutationTypeDescriptionCommand;
    string crossCommand;
    string breedCommand;
    string getNewIdCommand;
    string initFromFileCommand;
    string initFromMapCommand;
    string reloadCommandHandler;
    string lSystemFileRequest;
    string initMapRequest;
    string systemIdRequest;
    string systemCrossMapRequest;
    string optionsCrossMapRequest;
    string mutationProbabilitiesCrossMapRequest;
    string growthRulesCrossMapRequest;
    string systemRequest;
    string mutationProbabilitiesRequest;
    string mutationProbabilityRequest;
    string mutationProbabilityTypeRequest;
    string optionNumberRequest;
    string optionsRequest;
    string getMaxRequest;
    string getMinRequest;
    string getModeRequest;
    string runIterationRequest;
    string startProductionRequest;
    string endProductionRequest;
    string successReply;
    string failedReply;
    string endMessage;
    string shutdownMessage;
    string createInterpreterIntCommand;
    string loadAttributesIntCommand;
    string saveAttributesIntCommand;
    string getSystemIntCommand;
    string reloadConfigIntCommand;
    string setAttributeIntCommand;
    string getAttributeIntCommand;
    string getAttributeDescriptionIntCommand;
    string getSupportedAttributesIntCommand;
    string getAttributeNameIntRequest;
    string getAttributeValueIntRequest;
    string endMessageBlock;
    string invalidId;
    string defaultLibId;
protected:
    Commands();
private:
    static Commands* instance;
};
#endif
